import{_ as e,o as t,c as a,a as s}from"./app.1b12a468.js";const f=JSON.parse('{"title":"Bech32","description":"","frontmatter":{},"headers":[],"relativePath":"guide/types/bech32.md","lastUpdated":1678640713000}'),o={name:"guide/types/bech32.md"},c=s('<h1 id="bech32" tabindex="-1">Bech32 <a class="header-anchor" href="#bech32" aria-hidden="true">#</a></h1><p>The <code>Bech32Address</code> enables the use of addresses and contract ids in the bech32 format (using bech32m). They can easily be converted to their counterparts using <a href="./address.html">Address</a>.</p><p>Here are the main ways of creating a <code>Bech32Address</code></p><blockquote><p><strong>Note:</strong> when using a <code>Bech32Address</code> with an <code>Address</code> the HRP (Human-Readable Part) is set to <strong>&quot;fuel&quot;</strong> per default:</p></blockquote>',4),d=[c];function r(n,h,i,_,p,u){return t(),a("div",null,d)}const b=e(o,[["render",r]]);export{f as __pageData,b as default};
