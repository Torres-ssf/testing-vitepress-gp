import{d as o}from"./chunks/versions.data.e5c6b772.js";import{o as s,c,b as e,d as t,a as r}from"./app.1b12a468.js";const i=e("h1",{id:"deploying-contracts",tabindex:"-1"},[t("Deploying contracts "),e("a",{class:"header-anchor",href:"#deploying-contracts","aria-hidden":"true"},"#")],-1),l=e("p",null,"There are two main ways of working with contracts in the SDK: deploying a contract with SDK or using the SDK to interact with existing contracts.",-1),p=e("h2",{id:"deploying-a-contract-binary",tabindex:"-1"},[t("Deploying a contract binary "),e("a",{class:"header-anchor",href:"#deploying-a-contract-binary","aria-hidden":"true"},"#")],-1),d=e("code",null,"forc build",-1),h=r(`<p>Below is how you can deploy your contracts using the SDK. For more details about each component in this process, read about <a href="./the-fuelvm-binary-file.html">the FuelVM binary file</a> and <a href="./../abi-typegen/">the JSON ABI file</a>.</p><h3 id="the-deploy-functions" tabindex="-1">The deploy functions <a class="header-anchor" href="#the-deploy-functions" aria-hidden="true">#</a></h3><p>If you are only interested in a single instance of your contract, then use <code>deploy</code></p><p>You can then use the contract methods very simply:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> contact </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> factory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deployContract</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>Also read about how to <a href="./../abi-typegen/generate-contract-types-from-abi.html">generate-contract-types-from-abi</a>, allowing for rich TypeScript backed Fuel usage.</p>`,6),m=JSON.parse('{"title":"Deploying contracts","description":"","frontmatter":{},"headers":[{"level":2,"title":"Deploying a contract binary","slug":"deploying-a-contract-binary","link":"#deploying-a-contract-binary","children":[{"level":3,"title":"The deploy functions","slug":"the-deploy-functions","link":"#the-deploy-functions","children":[]}]}],"relativePath":"guide/contracts/deploying-contracts.md","lastUpdated":1678640713000}'),y={name:"guide/contracts/deploying-contracts.md"},D=Object.assign(y,{setup(u){const{sway:a}=o,n=`https://fuellabs.github.io/sway/v${a}/book/introduction/index.html`;return(f,g)=>(s(),c("div",null,[i,l,p,e("p",null,[t("Once you've written a contract in Sway and compiled it with "),d,t(" (read "),e("a",{href:n,target:"_blank",rel:"noreferrer"},"here"),t(" for more on how to work with Sway), you'll have in your hands two important artifacts: the compiled binary file and the JSON ABI file.")]),h]))}});export{m as __pageData,D as default};
