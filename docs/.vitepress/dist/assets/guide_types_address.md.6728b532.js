import{_ as e,o as s,c as a,a as d}from"./app.1b12a468.js";const m=JSON.parse('{"title":"Address","description":"","frontmatter":{},"headers":[],"relativePath":"guide/types/address.md","lastUpdated":1678640713000}'),t={name:"guide/types/address.md"},r=d('<h1 id="address" tabindex="-1">Address <a class="header-anchor" href="#address" aria-hidden="true">#</a></h1><p><code>Address</code> is a wrapper on <code>Bytes32</code> and <code>Bech32</code>. The available interface of the TS-SDK Address contains many useful functions to switch between Address formats:</p><p>These are the main ways of creating an <code>Address</code></p><p>From a <a href="./bech32.html">Bech32</a> Address:</p><p>From a Public Key:</p><p>From a <a href="./bits256.html">256 Bit Address</a> Address:</p><p>You can also use a number of utilities as part of the Address Class:</p>',7),o=[r];function c(n,i,p,_,h,l){return s(),a("div",null,o)}const u=e(t,[["render",c]]);export{m as __pageData,u as default};
