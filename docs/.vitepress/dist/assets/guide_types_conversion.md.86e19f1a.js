import{_ as e,o as t,c as n,a as o}from"./app.1b12a468.js";const m=JSON.parse('{"title":"Converting native types","description":"","frontmatter":{},"headers":[],"relativePath":"guide/types/conversion.md","lastUpdated":1678640713000}'),a={name:"guide/types/conversion.md"},s=o('<h1 id="converting-native-types" tabindex="-1">Converting native types <a class="header-anchor" href="#converting-native-types" aria-hidden="true">#</a></h1><p>You might want to convert between the native types (<code>Bytes32</code>, <code>Address</code>, <code>ContractId</code>, and <code>AssetId</code>). Because these types are wrappers on <code>Bytes</code> converting is a matter of using helpers. Here&#39;s an example:</p>',2),r=[s];function c(d,i,_,p,v,h){return t(),n("div",null,r)}const u=e(a,[["render",c]]);export{m as __pageData,u as default};
