import{_ as e,o as a,c as t,a as c}from"./app.1b12a468.js";const m=JSON.parse('{"title":"Calling contracts","description":"","frontmatter":{},"headers":[],"relativePath":"guide/contracts/index.md","lastUpdated":1678640713000}'),o={name:"guide/contracts/index.md"},n=c('<h1 id="calling-contracts" tabindex="-1">Calling contracts <a class="header-anchor" href="#calling-contracts" aria-hidden="true">#</a></h1><p>Once you&#39;ve deployed your contract, as seen in the previous sections, you&#39;ll likely want to:</p><ol><li>Call contract methods;</li><li>Configure call and transaction parameters such as gas price, byte price, and gas limit;</li><li>Forward coins and gas in your contract calls;</li><li>Read and interpret returned values and logs.</li></ol><p>Here&#39;s an example. Suppose your Sway contract has two ABI methods called <code>echo_str_8(str[8])</code> and <code>echo_u8(u8)</code>. Once you&#39;ve deployed the contract, you can call the methods like this:</p><p>The examples above uses all the default configurations and performs a simple contract call.</p><p>Next, we&#39;ll see how we can further configure the many different parameters in a contract call</p>',6),r=[n];function s(l,i,d,p,_,u){return a(),t("div",null,r)}const f=e(o,[["render",s]]);export{m as __pageData,f as default};
