import{_ as e,o as a,c as s,a as n}from"./app.1b12a468.js";const D=JSON.parse('{"title":"Creating a wallet from mnemonic phrases","description":"","frontmatter":{},"headers":[{"level":6,"title":"See code in context","slug":"see-code-in-context","link":"#see-code-in-context","children":[]}],"relativePath":"guide/wallets/mnemonic-wallet.md","lastUpdated":1678647917000}'),t={name:"guide/wallets/mnemonic-wallet.md"},o=n(`<h1 id="creating-a-wallet-from-mnemonic-phrases" tabindex="-1">Creating a wallet from mnemonic phrases <a class="header-anchor" href="#creating-a-wallet-from-mnemonic-phrases" aria-hidden="true">#</a></h1><p>A mnemonic phrase is a cryptographically-generated sequence of words that&#39;s used to derive a private key. For instance: <code>&quot;oblige salon price punch saddle immune slogan rare snap desert retire surprise&quot;;</code> would generate the address <code>0xdf9d0e6c6c5f5da6e82e5e1a77974af6642bdb450a10c43f0c6910a212600185</code>.</p><p>In addition to that, we also support <a href="https://www.ledger.com/academy/crypto/what-are-hierarchical-deterministic-hd-wallets" target="_blank" rel="noreferrer">Hierarchical Deterministic Wallets</a> and <a href="https://learnmeabitcoin.com/technical/derivation-paths" target="_blank" rel="noreferrer">derivation paths</a>. You may recognize the string <code>&quot;m/44&#39;/60&#39;/0&#39;/0/0&quot;</code> from somewhere; that&#39;s a derivation path. In simple terms, it&#39;s a way to derive many wallets from a single root wallet.</p><p>The SDK gives you two wallets from mnemonic instantiation methods: one that takes a derivation path and one that uses the default derivation path, in case you don&#39;t want or don&#39;t need to configure that.</p><p>Here&#39;s how you can create wallets with both mnemonic phrases and derivation paths:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> walletManager </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">WalletManager</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> password </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0b540281-f87b-49ca-be37-2264c7f260f7</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> walletManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unlock</span><span style="color:#A6ACCD;">(password)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Add a vault of type mnemonic</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> walletManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addVault</span><span style="color:#A6ACCD;">(config)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h6 id="see-code-in-context" tabindex="-1"><a href="https://github.com/FuelLabs/fuels-ts/blob/master/packages/wallet-manager/src/wallet-manager.test.ts#L13-L22" target="_blank" rel="noreferrer">See code in context</a> <a class="header-anchor" href="#see-code-in-context" aria-hidden="true">#</a></h6>`,7),l=[o];function r(c,p,i,d,h,m){return a(),s("div",null,l)}const u=e(t,[["render",r]]);export{D as __pageData,u as default};
