import{_ as t,o as e,c as a,U as l}from"./app.13a25981.js";import"./chunks/theme.c66773c8.js";const _=JSON.parse('{"title":"Multiple contract calls","description":"","frontmatter":{},"headers":[{"level":2,"title":"Different contracts in multicalls","slug":"different-contracts-in-multicalls","link":"#different-contracts-in-multicalls","children":[]},{"level":2,"title":"Output values","slug":"output-values","link":"#output-values","children":[]}],"relativePath":"guide/contracts/multicalls.md","lastUpdated":1678564845000}'),c={name:"guide/contracts/multicalls.md"},o=l('<h1 id="multiple-contract-calls" tabindex="-1">Multiple contract calls <a class="header-anchor" href="#multiple-contract-calls" aria-hidden="true">#</a></h1><p>At a basic level, you can call the same contract function multiple times in the same transaction:</p><h2 id="different-contracts-in-multicalls" tabindex="-1">Different contracts in multicalls <a class="header-anchor" href="#different-contracts-in-multicalls" aria-hidden="true">#</a></h2><p>You can execute multiple contract calls to distinct contracts within a single transaction. To achieve this, you first prepare all the contract calls that you want to bundle:</p><p>You can also set call parameters, variable outputs, or external contracts for every contract call, as long as you don&#39;t execute it with <code>call()</code> or <code>simulate()</code>. See also <a href="./call-parameters.html">call parameters</a>.</p><p>Next, you provide the prepared calls to the <code>multiCall</code> method and optionally configure transaction parameters:</p><blockquote><p><strong>Note:</strong> any transaction parameters configured on separate contract calls are disregarded in favor of the parameters provided to <code>multiCall</code>.</p></blockquote><h2 id="output-values" tabindex="-1">Output values <a class="header-anchor" href="#output-values" aria-hidden="true">#</a></h2><p>To get the output values of the bundled calls, invoke of <code>call()</code> or <code>simulate()</code>:</p>',9),r=[o];function n(s,i,u,d,p,h){return e(),a("div",null,r)}const v=t(c,[["render",n]]);export{_ as __pageData,v as default};
