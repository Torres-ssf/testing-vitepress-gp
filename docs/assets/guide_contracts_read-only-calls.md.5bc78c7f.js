import{_ as a,o as s,c as e,a as t}from"./app.a85cfb4e.js";const A=JSON.parse('{"title":"Read-only calls","description":"","frontmatter":{},"headers":[{"level":2,"title":"When to use get() vs call()","slug":"when-to-use-get-vs-call","link":"#when-to-use-get-vs-call","children":[]}],"relativePath":"guide/contracts/read-only-calls.md"}'),n={name:"guide/contracts/read-only-calls.md"},o=t(`<h1 id="read-only-calls" tabindex="-1">Read-only calls <a class="header-anchor" href="#read-only-calls" aria-hidden="true">#</a></h1><p>Sometimes you want to call a contract method that does not change the state of the blockchain. For instance, a method that only <em>reads</em> a value from storage and returns it without making any changes to storage.</p><p>In this case, there is no need to create an actual blockchain transaction; you only want to read a value quickly.</p><p>You can do this with the SDK. Instead of <code>.call()</code>ing the method, use <code>.get()</code>:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> contract </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setupContract</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> value </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> contract</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">functions</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">echo_b256</span><span style="color:#A6ACCD;">(contract</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toB256</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">expect</span><span style="color:#A6ACCD;">(value)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toEqual</span><span style="color:#A6ACCD;">(contract</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toB256</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><a class="anchor-link" href="https://github.com/FuelLabs/fuels-ts/blob/master/packages/fuel-gauge/src/contract.test.ts#L702-L706" target="_blank" rel="noreferrer">See code in context </a><hr><p><code>get()</code> doesn&#39;t take funding, as it is a read-only call that doesn&#39;t alter the chain state.</p><p>If you want to dry run a transaction call that takes funding without altering the chain state, use <code>dryRun()</code>.</p><h2 id="when-to-use-get-vs-call" tabindex="-1">When to use <code>get()</code> vs <code>call()</code> <a class="header-anchor" href="#when-to-use-get-vs-call" aria-hidden="true">#</a></h2><p>Anytime you want to call a method that does <em>not</em> change the state of the blockchain, use <code>get()</code>. If you want to call a method that <em>does</em> change the state of the blockchain, use <code>call()</code>.</p><p><code>get()</code> is intended to be used only for read-only calls.</p>`,12),l=[o];function c(p,r,d,i,y,h){return s(),e("div",null,l)}const D=a(n,[["render",c]]);export{A as __pageData,D as default};
